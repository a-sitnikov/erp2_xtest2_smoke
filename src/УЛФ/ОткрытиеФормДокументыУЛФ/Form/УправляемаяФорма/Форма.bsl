&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;

&НаКлиенте
Перем ТестируемаяФорма;

// { интерфейс тестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("лфРегистрацияЛесосеки");
	Массив.Добавить("лфМатериальноДенежнаяОценкаЛесногоУчастка");
	Массив.Добавить("лфЛеснаяДекларация");
	Массив.Добавить("лфПередачиЛесосекВРазработку");
	Массив.Добавить("лфАктЗаготовкиДревесины");
	Массив.Добавить("лфОстановкаРубки");
	Массив.Добавить("лфАктНарушенияПравилРубки");
	Массив.Добавить("лфЗавершениеРубки");
	Массив.Добавить("лфПриемкаЛесосеки");
	
	Для каждого Имя из Массив Цикл
		
		НаборТестов.НачатьГруппу(Имя);
		НаборТестов.Добавить("ОткрытьФормуСписка", НаборТестов.ПараметрыТеста(Имя), Имя + "_ОткрытьФормуСписка");
		
		НаборТестов.Добавить("ОткрытьФормуЭлементаНовый", НаборТестов.ПараметрыТеста(Имя), Имя + "_ОткрытьФормуЭлемента_Новый");
		НаборТестов.Добавить("ОткрытьФормуЭлементаСуществующий", НаборТестов.ПараметрыТеста(Имя), Имя + "_ОткрытьФормуЭлемента_Существующий");
			
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	ЗакрытьФорму();
	
КонецПроцедуры

// } интерфейс тестирования

//{ блок юнит-тестов - САМИ ТЕСТЫ

&НаКлиенте
Процедура ЗакрытьФорму()
	//Если ТипЗнч(ТестируемаяФорма) <> Тип("Форма") и ТипЗнч(ТестируемаяФорма) <> Тип("УправляемаяФорма") Тогда
	Если ТипЗнч(ТестируемаяФорма) <> Тип("УправляемаяФорма") Тогда
		Возврат;
	КонецЕсли; 
	ТестируемаяФорма.Модифицированность = Ложь;
	Если ТестируемаяФорма.Открыта() Тогда
		ТестируемаяФорма.Модифицированность = Ложь;
		//Попытка
			ТестируемаяФорма.Закрыть();
		//Исключение
		//	Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		//	ЗакрытьФормуБезусловноСОтменойТранзакции(ТестируемаяФорма);
		//	//Если ТранзакцияАктивна() Тогда
		//	//	ОтменитьТранзакцию();
		//	//КонецЕсли;
		//	//	//ДобавитьСтрокуРезультата(ИмяОперации, ИнформацияОбОшибке());
		//	//НачатьТранзакцию();
		//	//ТестируемаяФорма.УстановитьДействие("ПередЗакрытием", Неопределено);
		//	//ТестируемаяФорма.УстановитьДействие("ПриЗакрытии", Неопределено);
		//	//ТестируемаяФорма.Закрыть();
		//	ВызватьИсключение Ошибка; 			
		//КонецПопытки;
	Иначе
		Попытка
			ТестируемаяФорма.Закрыть();
		Исключение
		КонецПопытки;
	КонецЕсли;
	ТестируемаяФорма = "";

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЭлементДокумента(Имя, Параметры = Неопределено)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спр.Ссылка
	|ИЗ
	|	Документ." + Имя + " КАК Спр
	|ГДЕ
	|	НЕ Спр.ПометкаУдаления
	|{ГДЕ
	|	Спр.Ссылка.* КАК Ссылка,
	|	Спр.Проведен}
	|УПОРЯДОЧИТЬ ПО
	|	Спр.Дата УБЫВ";
	
	Если Параметры <> Неопределено Тогда
		
		Для каждого КлючИЗначение из Параметры Цикл
			ЭлементОтбора = Запрос.Отбор.Добавить(КлючИЗначение.Ключ);
			ЭлементОтбора.Установить(КлючИЗначение.Значение, Истина);
		КонецЦикла;	
		
	КонецЕсли;	
	
	Запрос.Выполнить();
	Если Запрос.Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Запрос.Результат.Выгрузить()[0][0];
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ОткрытьФормуСписка(Имя) Экспорт
	
	ТестируемаяФорма = ОткрытьФорму("Документ." + Имя + ".ФормаСписка");
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФормуЭлементаНовый(Имя) Экспорт
	
	ТестируемаяФорма = ОткрытьФорму("Документ." + Имя + ".ФормаОбъекта");
	
	Утверждения.ПроверитьЗаполненность(ТестируемаяФорма.СостояниеДокумента, "Не заполнено состояние");
	Утверждения.ПроверитьЗаполненность(ТестируемаяФорма.Объект.Автор,       "Не заполнен автор");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЭлементаСуществующий(Имя) Экспорт
	
	Ссылка = ПолучитьЭлементДокумента(Имя, Новый Структура("Проведен", Истина));
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Ссылка);
	
		ТестируемаяФорма = ОткрытьФорму("Документ." + Имя + ".ФормаОбъекта", ПараметрыФормы);
		Утверждения.ПроверитьЗаполненность(ТестируемаяФорма.СостояниеДокумента, "Не заполнено состояние");
		
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		
		ТестируемаяФорма.Записать(ПараметрыЗаписи);
		
	КонецЕсли;	
	
КонецПроцедуры

