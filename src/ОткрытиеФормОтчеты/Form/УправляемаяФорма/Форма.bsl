&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;

&НаКлиенте
Перем ТестируемаяФорма;

// { интерфейс тестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	Массив = ПолучитьМассивОбъектов();
	
	Для каждого Имя из Массив Цикл
		
		НаборТестов.Добавить("ОткрытьФормуОтчета", НаборТестов.ПараметрыТеста(Имя), Имя + "_ОткрытьФормуОтчета");
		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивОбъектов()
	
	ОбъектыИсключения = Новый Структура;
	ОбъектыИсключения.Вставить("БазаРаспределенияМатериаловИРабот");
	ОбъектыИсключения.Вставить("ДиаграммаПроизводстваПартииЗапуска");
	ОбъектыИсключения.Вставить("МеждународныйОтчет");
	ОбъектыИсключения.Вставить("ПаспортКонтракта");
	ОбъектыИсключения.Вставить("РасшифровкаФормулыБюджетногоОтчета");
	ОбъектыИсключения.Вставить("СведенияОКооперации");
	ОбъектыИсключения.Вставить("СостояниеВыполненияДокументов");
	ОбъектыИсключения.Вставить("СостояниеВыполненияЗаказовНаПроизводство");
	ОбъектыИсключения.Вставить("ОценкаРентабельностиПродаж");
	ОбъектыИсключения.Вставить("БазаРаспределенияПроизводственныхРасходов");
	ОбъектыИсключения.Вставить("ПримененныеСкидкиВДокументе");
	ОбъектыИсключения.Вставить("КонтрольПлатежаНаСоответствие275ФЗ");
	ОбъектыИсключения.Вставить("СертификатыНоменклатурыСИстекающимСрокомДействия");
	ОбъектыИсключения.Вставить("ПраваДоступа");
	ОбъектыИсключения.Вставить("БюджетныйОтчет");
	
	Массив = Новый Массив;
	Для каждого ОбъектМетаданных из Метаданные.Отчеты Цикл
		
		Если Найти(ОбъектМетаданных.Имя, "Удалить") = 1 Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ОбъектыИсключения.Свойство(ОбъектМетаданных.Имя) Тогда
			Продолжить;
		КонецЕсли;	
		
		Массив.Добавить(ОбъектМетаданных.Имя);
		
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции	

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
	ЗакрытьФорму();
	
КонецПроцедуры

// } интерфейс тестирования

//{ блок юнит-тестов - САМИ ТЕСТЫ

&НаКлиенте
Процедура ЗакрытьФорму()
	//Если ТипЗнч(ТестируемаяФорма) <> Тип("Форма") и ТипЗнч(ТестируемаяФорма) <> Тип("УправляемаяФорма") Тогда
	Если ТипЗнч(ТестируемаяФорма) <> Тип("УправляемаяФорма") Тогда
		Возврат;
	КонецЕсли; 
	ТестируемаяФорма.Модифицированность = Ложь;
	Если ТестируемаяФорма.Открыта() Тогда
		ТестируемаяФорма.Модифицированность = Ложь;
		//Попытка
			ТестируемаяФорма.Закрыть();
		//Исключение
		//	Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		//	ЗакрытьФормуБезусловноСОтменойТранзакции(ТестируемаяФорма);
		//	//Если ТранзакцияАктивна() Тогда
		//	//	ОтменитьТранзакцию();
		//	//КонецЕсли;
		//	//	//ДобавитьСтрокуРезультата(ИмяОперации, ИнформацияОбОшибке());
		//	//НачатьТранзакцию();
		//	//ТестируемаяФорма.УстановитьДействие("ПередЗакрытием", Неопределено);
		//	//ТестируемаяФорма.УстановитьДействие("ПриЗакрытии", Неопределено);
		//	//ТестируемаяФорма.Закрыть();
		//	ВызватьИсключение Ошибка; 			
		//КонецПопытки;
	Иначе
		Попытка
			ТестируемаяФорма.Закрыть();
		Исключение
		КонецПопытки;
	КонецЕсли;
	ТестируемаяФорма = "";

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Имя) Экспорт
	
	ТестируемаяФорма = ОткрытьФорму("Отчет." + Имя + ".ФормаОбъекта");
	
КонецПроцедуры	


